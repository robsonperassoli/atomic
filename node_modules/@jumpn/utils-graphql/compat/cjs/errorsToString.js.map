{"version":3,"file":"errorsToString.js","sources":["../../src/errorsToString.js"],"sourcesContent":["// @flow\n\nimport type {GqlError} from \"./types\";\n\nconst locationsToString = locations =>\n  locations.map(({column, line}) => `${line}:${column}`).join(\"; \");\n\nconst errorToString = ({message, locations}) =>\n  message + (locations ? ` (${locationsToString(locations)})` : \"\");\n\n/**\n * Transforms an array of GqlError into a string.\n *\n * @example\n *\n * const gqlRespose = {\n *   errors: [\n *     {message: \"First Error\", locations: [{column: 10, line: 2}]},\n *     {message: \"Second Error\", locations: [{column: 2, line: 4}]}\n *   ]\n * }\n *\n * const error = errorsToString(gqlRespose.errors);\n * // string with the following:\n * // First Error (2:10)\n * // Second Error (4:2)\n */\nconst errorsToString = (gqlErrors: Array<GqlError>): string =>\n  gqlErrors.map(errorToString).join(\"\\n\");\n\nexport default errorsToString;\n"],"names":["locationsToString","locations","map","column","line","join","errorToString","message","errorsToString","gqlErrors"],"mappings":";;;;;;;;;;AAIA,IAAMA,iBAAiB,GAAG,2BAAAC,SAAS;;;;;SACjCA,SAAS,CAACC,GAAV,CAAc;QAAEC,MAAF,QAAEA,MAAF;QAAUC,IAAV,QAAUA,IAAV;;;;qBAAuBA,IAAvB,cAA+BD,MAA/B;GAAd,aAAuDE,IAAvD,CAA4D,IAA5D,CADiC;CAAZ,gBAAvB;;AAGA,IAAMC,aAAa,GAAG;MAAEC,OAAF,SAAEA,OAAF;MAAWN,SAAX,SAAWA,SAAX;;;;SACpBM,OAAO,IAAIN,SAAS,eAAQD,iBAAiB,CAACC,SAAD,CAAzB,SAA0C,EAAvD,CADa;CAAH,gBAAnB;;;;;;;;;;;;;;;;;;;;AAoBA,IAAMO,cAAc,GAAG,wBAACC,SAAD;;;SACrBA,SAAS,CAACP,GAAV,CAAcI,aAAd,EAA6BD,IAA7B,CAAkC,IAAlC,CADqB;CAAH,gBAApB;;;;"}