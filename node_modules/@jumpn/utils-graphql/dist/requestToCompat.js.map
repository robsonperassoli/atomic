{"version":3,"file":"requestToCompat.js","sources":["../src/requestToCompat.js"],"sourcesContent":["// @flow\n\nimport type {GqlRequest, GqlRequestCompat} from \"./types\";\n\n/**\n * Creates a GqlRequest using given GqlRequestCompat\n *\n * @param {GqlRequest<Variables>} gqlRequest\n *\n * @return {GqlRequestCompat<Variables>}\n * \n * @example\n * const operation = `\n *   query userQuery($userId: ID!) {\n *     user(userId: $userId) {\n *       id\n *       email\n *     }\n *   }\n * `;\n * \n * console.log(requestToCompat({operation, variables: {userId: 10}}));\n * // {query: \"...\", variables: {userId: 10}}\n */\nconst requestToCompat = <Variables: void | Object>({\n  operation: query,\n  variables\n}: GqlRequest<Variables>): GqlRequestCompat<Variables> =>\n  variables ? {query, variables} : {query};\n\nexport default requestToCompat;\n"],"names":["requestToCompat","query","operation","variables"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAMA,eAAe,GAAG;MACXC,KADW,QACtBC,SADsB;MAEtBC,SAFsB,QAEtBA,SAFsB;;;;SAItBA,SAAS,GAAG;IAACF,KAAK,EAALA,KAAD;IAAQE,SAAS,EAATA;GAAX,GAAwB;IAACF,KAAK,EAALA;GAJZ;CAAH,gBAArB;;;;"}