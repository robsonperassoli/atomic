{"version":3,"file":"setIn.js","sources":["../../src/get.js","../../src/hasKey.js","../../src/remove.js","../../src/shallowCopy.js","../../src/updateIn.js","../../src/setIn.js"],"sourcesContent":["// @flow\n\nimport {curry} from \"flow-static-land/lib/Fun\";\n\nimport type {Composite, Key} from \"./types\";\n\n/**\n * Get property value of given key.\n */\nconst get = (key: Key, composite: Composite): any => composite[(key: any)];\n\nexport default curry(get);\n","// @flow\n\nimport {curry} from \"flow-static-land/lib/Fun\";\n\nimport type {Composite, Key} from \"./types\";\n\n/**\n * Returns true if key is included in composite's own enumerable ones,\n * or false otherwise.\n */\nconst hasKey = (key: Key, composite: Composite): boolean =>\n  Object.prototype.hasOwnProperty.call(composite, key);\n\nexport default curry(hasKey);\n","// @flow\n\nimport {curry} from \"flow-static-land/lib/Fun\";\nimport {remove as arrayRemove} from \"@jumpn/utils-array\";\n\nimport type {Composite, Key} from \"./types\";\n\n// $FlowFixMe: flow does not understand the following construction\nconst objectRemove = (key, {[key]: removed, ...rest}) => rest;\n\n/**\n * Returns a new composite with the result of having removed the property with\n * the given key.\n */\nconst remove = (key: Key, composite: Composite): Composite =>\n  Array.isArray(composite)\n    ? arrayRemove((key: any), 1, composite)\n    : objectRemove(key, composite);\n\nexport default curry(remove);\n","// @flow\n\nimport type {Composite} from \"./types\";\n\n/**\n * Returns a new composite with the same own enumerable props of the one given.\n */\nconst shallowCopy = <C: Composite>(composite: C): C =>\n  Array.isArray(composite) ? [...composite] : {...composite};\n\nexport default shallowCopy;\n","// @flow\n\nimport {curry} from \"flow-static-land/lib/Fun\";\nimport {isLastIndex} from \"@jumpn/utils-array\";\n\nimport get from \"./get\";\nimport hasKey from \"./hasKey\";\nimport remove from \"./remove\";\nimport shallowCopy from \"./shallowCopy\";\n\nimport type {Composite, Path} from \"./types\";\n\nconst createReduceContext = composite => {\n  const origin = shallowCopy(composite);\n\n  return {origin, current: origin, previous: undefined};\n};\n\nconst set = (key, value, composite) => {\n  // eslint-disable-next-line no-param-reassign\n  composite[(key: any)] = value;\n\n  return get(key, composite);\n};\n\nconst updateSet = (path, index, value, context) => ({\n  ...context,\n  current: set(path[index], value, context.current),\n  previous: context.current\n});\n\nconst updateRemove = (path, index, context) => {\n  const removed = remove(path[index], context.current);\n\n  return index === 0\n    ? {...context, current: removed, origin: removed}\n    : {\n        ...context,\n        previous: set(path[index - 1], removed, (context.previous: any))\n      };\n};\n\nconst removeAction = Symbol(\"composite.updateIn.removeAction\");\n\nconst update = (path, index, value, context) =>\n  value === removeAction\n    ? updateRemove(path, index, context)\n    : updateSet(path, index, value, context);\n\nconst createSupporting = key => (typeof key === \"number\" ? [] : {});\n\nconst copyOrCreate = (key, nextKey, current) =>\n  hasKey(key, current)\n    ? shallowCopy(get(key, current))\n    : createSupporting(nextKey);\n\nconst getNext = (path, updater, index, current) =>\n  isLastIndex(path, index)\n    ? updater(get(path[index], current))\n    : copyOrCreate(path[index], path[index + 1], current);\n\nconst getReducer = (path, updater) => (context, key, index) =>\n  update(path, index, getNext(path, updater, index, context.current), context);\n\n/**\n * Returns a new composite with the result of having updated the property value\n * at the given path with the result of the call to updater function.\n * \n * Entry removal is supported by returning `updateIn.remove` symbol on updater\n * function.\n */\nconst updateIn = (\n  path: Path,\n  updater: (prev: any) => any,\n  composite: Composite\n): Composite =>\n  path.length === 0\n    ? composite\n    : path.reduce(getReducer(path, updater), createReduceContext(composite))\n        .origin;\n\n// we are doing this way and not returning an Object.assign construction, as\n// that is not well typed (returns any)\nconst updateInCurried = curry(updateIn);\n\nupdateInCurried.remove = removeAction;\n\nexport default updateInCurried;\n","// @flow\n\nimport {curry} from \"flow-static-land/lib/Fun\";\n\nimport updateIn from \"./updateIn\";\n\nimport type {Composite, Path} from \"./types\";\n\n/**\n * Returns a new composite with the result of having updated the property\n * located at the given path with the specified value.\n * \n * (This does the same as calling **updateIn** with updater: `() => value`)\n */\nconst setIn = (path: Path, value: mixed, composite: Composite): Composite =>\n  updateIn(path, () => value, composite);\n\nexport default curry(setIn);\n"],"names":["get","key","composite","curry","hasKey","Object","prototype","hasOwnProperty","call","objectRemove","rest","remove","Array","isArray","arrayRemove","shallowCopy","createReduceContext","origin","current","previous","undefined","set","value","updateSet","path","index","context","updateRemove","removed","removeAction","_Symbol","update","createSupporting","copyOrCreate","nextKey","getNext","updater","isLastIndex","getReducer","updateIn","length","reduce","updateInCurried","setIn"],"mappings":"klBASMA,IAAM,SAACC,EAAUC,uCAA8BA,EAAWD,uBAEjDE,UAAMH,oBCDfI,OAAS,SAACH,EAAUC,uCACxBG,OAAOC,UAAUC,eAAeC,KAAKN,EAAWD,0BAEnCE,UAAMC,uBCLfK,aAAe,SAACR,OAAOA,OAAkBS,8BAAlBT,wCAA4BS,gBAMnDC,SAAS,SAACV,EAAUC,uCACxBU,MAAMC,QAAQX,GACVY,kBAAab,EAAW,EAAGC,GAC3BO,aAAaR,EAAKC,0BAETC,UAAMQ,yBCZfI,YAAc,SAAeb,uCACjCU,MAAMC,QAAQX,gCAAiBA,gBAAiBA,gCCI5Cc,oBAAsB,6CACpBC,EAASF,YAAYb,UAEnBe,SAAQC,QAASD,EAAQE,cAAUC,iBAGvCC,IAAM,SAACpB,EAAKqB,EAAOpB,yCAEZD,GAAaqB,EAEjBtB,MAAIC,EAAKC,iBAGZqB,UAAY,SAACC,EAAMC,EAAOH,EAAOI,mDAClCA,WACML,IAAIG,EAAKC,GAAQH,EAAOI,EAAQR,kBAC/BQ,EAAQR,wBAGdS,aAAe,SAACH,EAAMC,EAAOC,oCAC3BE,EAAUjB,SAAOa,EAAKC,GAAQC,EAAQR,gBAE3B,IAAVO,cACCC,GAASR,QAASU,EAASX,OAAQW,gBAElCF,YACOL,IAAIG,EAAKC,EAAQ,GAAIG,EAAUF,EAAQP,0BAInDU,aAAeC,QAAO,mCAEtBC,OAAS,SAACP,EAAMC,EAAOH,EAAOI,uCAClCJ,IAAUO,aACNF,aAAaH,EAAMC,EAAOC,GAC1BH,UAAUC,EAAMC,EAAOH,EAAOI,iBAE9BM,iBAAmB,gDAAuB,iBAAR/B,sBAElCgC,aAAe,SAAChC,EAAKiC,EAAShB,uCAClCd,SAAOH,EAAKiB,GACRH,YAAYf,MAAIC,EAAKiB,IACrBc,iBAAiBE,iBAEjBC,QAAU,SAACX,EAAMY,EAASX,EAAOP,uCACrCmB,uBAAYb,EAAMC,GACdW,EAAQpC,MAAIwB,EAAKC,GAAQP,IACzBe,aAAaT,EAAKC,GAAQD,EAAKC,EAAQ,GAAIP,iBAE3CoB,WAAa,SAACd,EAAMY,uCAAY,SAACV,EAASzB,EAAKwB,uCACnDM,OAAOP,EAAMC,EAAOU,QAAQX,EAAMY,EAASX,EAAOC,EAAQR,SAAUQ,6BAShEa,SAAW,SACff,EACAY,EACAlC,uCAEgB,IAAhBsB,EAAKgB,OACDtC,EACAsB,EAAKiB,OAAOH,WAAWd,EAAMY,GAAUpB,oBAAoBd,IACxDe,qBAIHyB,gBAAkBvC,UAAMoC,UAE9BG,gBAAgB/B,OAASkB,8BCvEnBc,MAAQ,SAACnB,EAAYF,EAAcpB,qCACvCqC,gBAASf,EAAM,6CAAMF,cAAOpB,yBAEfC,UAAMwC"}