{"version":3,"file":"set.js","sources":["../../src/shallowCopy.js","../../src/set.js"],"sourcesContent":["// @flow\n\nimport type {Composite} from \"./types\";\n\n/**\n * Returns a new composite with the same own enumerable props of the one given.\n */\nconst shallowCopy = <C: Composite>(composite: C): C =>\n  Array.isArray(composite) ? [...composite] : {...composite};\n\nexport default shallowCopy;\n","// @flow\n\nimport {curry} from \"flow-static-land/lib/Fun\";\n\nimport shallowCopy from \"./shallowCopy\";\n\nimport type {Composite, Key} from \"./types\";\n\n/**\n * Returns a new composite with the result of having updated the property with\n * the given key with the specified value.\n */\nconst set = (key: Key, value: mixed, composite: Composite): Composite => {\n  const copy = shallowCopy(composite);\n\n  copy[(key: any)] = value;\n\n  return copy;\n};\n\nexport default curry(set);\n"],"names":["shallowCopy","composite","Array","isArray","set","key","value","copy","curry"],"mappings":"qYAOMA,YAAc,SAAeC,uCACjCC,MAAMC,QAAQF,gCAAiBA,gBAAiBA,8BCI5CG,IAAM,SAACC,EAAUC,EAAcL,kCAC7BM,EAAOP,YAAYC,YAEnBI,GAAaC,EAEZC,sBAGMC,UAAMJ"}