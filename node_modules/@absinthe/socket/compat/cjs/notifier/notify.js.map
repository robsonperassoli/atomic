{"version":3,"file":"notify.js","sources":["../../../src/notifier/observer/notifyAll.js","../../../src/notifier/notify.js"],"sourcesContent":["// @flow\n\nimport type {Event, Observer} from \"../types\";\n\nconst getNotifier = (handlerName, payload) => observer =>\n  observer[handlerName] && observer[handlerName](payload);\n\nconst getHandlerName = ({name}) => `on${name}`;\n\nconst notifyAll = <Result, Variables: void | Object>(\n  observers: $ReadOnlyArray<Observer<Result, Variables>>,\n  event: Event\n) => observers.forEach(getNotifier(getHandlerName(event), event.payload));\n\nexport default notifyAll;\n","// @flow\n\nimport observerNotifyAll from \"./observer/notifyAll\";\n\nimport type {Event, Notifier} from \"./types\";\n\nconst getObservers = ({activeObservers, canceledObservers}) => [\n  ...activeObservers,\n  ...canceledObservers\n];\n\nconst notify = <Result, Variables: void | Object>(\n  notifier: Notifier<Result, Variables>,\n  event: Event\n) => {\n  observerNotifyAll(getObservers(notifier), event);\n\n  return notifier;\n};\n\nexport default notify;\n"],"names":["getNotifier","handlerName","payload","observer","getHandlerName","name","notifyAll","observers","event","forEach","getObservers","activeObservers","canceledObservers","notify","notifier","observerNotifyAll"],"mappings":";;;;;;;;;;;;;AAIA,IAAMA,WAAW,GAAG,qBAACC,WAAD,EAAcC,OAAd;;;;;SAA0B,UAAAC,QAAQ;;;WACpDA,QAAQ,CAACF,WAAD,CAAR,IAAyBE,QAAQ,CAACF,WAAD,CAAR,CAAsBC,OAAtB,CAD2B;GAAlC;CAAH,gBAAjB;;AAGA,IAAME,cAAc,GAAG;MAAEC,IAAF,QAAEA,IAAF;;;;qBAAiBA,IAAjB;CAAH,gBAApB;;AAEA,IAAMC,SAAS,GAAG,mBAChBC,SADgB,EAEhBC,KAFgB;;;SAGbD,SAAS,CAACE,OAAV,CAAkBT,WAAW,CAACI,cAAc,CAACI,KAAD,CAAf,EAAwBA,KAAK,CAACN,OAA9B,CAA7B,CAHa;CAAH,gBAAf;;;;ACHA,IAAMQ,YAAY,GAAG;MAAEC,eAAF,QAAEA,eAAF;MAAmBC,iBAAnB,QAAmBA,iBAAnB;;;;4BAChBD,eADgB,4BAEhBC,iBAFgB;CAAH,gBAAlB;;AAKA,IAAMC,MAAM,GAAG,gBACbC,QADa,EAEbN,KAFa,EAGV;;;EACHO,SAAiB,CAACL,YAAY,CAACI,QAAD,CAAb,EAAyBN,KAAzB,CAAjB;SAEOM,QAAP;CANU,gBAAZ;;;;"}