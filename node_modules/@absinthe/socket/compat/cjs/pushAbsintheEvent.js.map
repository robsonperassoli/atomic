{"version":3,"file":"pushAbsintheEvent.js","sources":["../../src/handlePush.js","../../src/notifier/find.js","../../src/pushAbsintheEvent.js"],"sourcesContent":["// @flow\n\nimport {Push} from \"phoenix\";\n\nimport type {PushHandler} from \"./types\";\n\nconst handlePush = (push: Push, handler: PushHandler<any>) =>\n  push\n    .receive(\"ok\", handler.onSucceed)\n    .receive(\"error\", handler.onError)\n    .receive(\"timeout\", handler.onTimeout);\n\nexport default handlePush;\n","// @flow\n\nimport {hasIn} from \"@jumpn/utils-composite\";\n\nimport type {Notifier} from \"./types\";\n\nconst find = (notifiers: Array<Notifier<any, any>>, key: string, value: any) =>\n  // $FlowFixMe: flow is having some troubles to match hasIn signature (curry)\n  notifiers.find(hasIn([key], value));\n\nexport default find;\n","// @flow\n\nimport {map} from \"@jumpn/utils-composite\";\n\nimport type {GqlRequest} from \"@jumpn/utils-graphql/compat/cjs/types\";\n\nimport handlePush from \"./handlePush\";\nimport notifierFind from \"./notifier/find\";\n\nimport type {AbsintheEvent} from \"./absinthe-event/types\";\nimport type {AbsintheSocket, NotifierPushHandler} from \"./types\";\n\nconst getPushHandlerMethodGetter = (absintheSocket, request) => handle => (\n  ...args\n) => {\n  const notifier = notifierFind(absintheSocket.notifiers, \"request\", request);\n\n  if (notifier) {\n    handle(absintheSocket, notifier, ...args);\n  }\n};\n\nconst getPushHandler = (absintheSocket, request, notifierPushHandler) =>\n  map(getPushHandlerMethodGetter(absintheSocket, request), notifierPushHandler);\n\nconst pushAbsintheEvent = <Variables: void | Object, Response: Object>(\n  absintheSocket: AbsintheSocket,\n  request: GqlRequest<Variables>,\n  notifierPushHandler: NotifierPushHandler<Response>,\n  absintheEvent: AbsintheEvent\n) => {\n  handlePush(\n    absintheSocket.channel.push(absintheEvent.name, absintheEvent.payload),\n    getPushHandler(absintheSocket, request, notifierPushHandler)\n  );\n\n  return absintheSocket;\n};\n\nexport default pushAbsintheEvent;\n"],"names":["handlePush","push","handler","receive","onSucceed","onError","onTimeout","find","notifiers","key","value","hasIn","getPushHandlerMethodGetter","absintheSocket","request","handle","notifier","notifierFind","args","getPushHandler","notifierPushHandler","map","pushAbsintheEvent","absintheEvent","channel","name","payload"],"mappings":";;;;;;;;;;;;;AAMA,IAAMA,UAAU,GAAG,oBAACC,IAAD,EAAaC,OAAb;;;SACjBD,IAAI,CACDE,OADH,CACW,IADX,EACiBD,OAAO,CAACE,SADzB,EAEGD,OAFH,CAEW,OAFX,EAEoBD,OAAO,CAACG,OAF5B,EAGGF,OAHH,CAGW,SAHX,EAGsBD,OAAO,CAACI,SAH9B,CADiB;CAAH,gBAAhB;;;;ACAA,IAAMC,IAAI,GAAG,cAACC,SAAD,EAAuCC,GAAvC,EAAoDC,KAApD;;;;SAEXF,SAAS,CAACD,IAAV,CAAeI,oBAAK,CAAC,CAACF,GAAD,CAAD,EAAQC,KAAR,CAApB,CAFW;CAAH,gBAAV;;;;ACMA,IAAME,0BAA0B,GAAG,oCAACC,cAAD,EAAiBC,OAAjB;;;;;SAA6B,UAAAC,MAAM;;;;;WAAI,YAErE;;;UACGC,QAAQ,GAAGC,IAAY,CAACJ,cAAc,CAACL,SAAhB,EAA2B,SAA3B,EAAsCM,OAAtC,CAA7B;;UAEIE,QAAJ,EAAc;0CAJXE,IAIW;UAJXA,IAIW;;;QACZH,MAAM,MAAN,UAAOF,cAAP,EAAuBG,QAAvB,SAAoCE,IAApC;;KANkE;GAAnC;CAAH,gBAAhC;;AAUA,IAAMC,cAAc,GAAG,wBAACN,cAAD,EAAiBC,OAAjB,EAA0BM,mBAA1B;;;SACrBC,kBAAG,CAACT,0BAA0B,CAACC,cAAD,EAAiBC,OAAjB,CAA3B,EAAsDM,mBAAtD,CADkB;CAAH,gBAApB;;AAGA,IAAME,iBAAiB,GAAG,2BACxBT,cADwB,EAExBC,OAFwB,EAGxBM,mBAHwB,EAIxBG,aAJwB,EAKrB;;;EACHvB,UAAU,CACRa,cAAc,CAACW,OAAf,CAAuBvB,IAAvB,CAA4BsB,aAAa,CAACE,IAA1C,EAAgDF,aAAa,CAACG,OAA9D,CADQ,EAERP,cAAc,CAACN,cAAD,EAAiBC,OAAjB,EAA0BM,mBAA1B,CAFN,CAAV;SAKOP,cAAP;CAXqB,gBAAvB;;;;"}