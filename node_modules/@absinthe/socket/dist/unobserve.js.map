{"version":3,"file":"unobserve.js","sources":["../src/notifier/findIndex.js","../src/notifier/refresh.js","../src/notifier/unobserve.js","../src/updateNotifiers.js","../src/unobserve.js"],"sourcesContent":["// @flow\n\nimport {hasIn} from \"@jumpn/utils-composite\";\n\nimport type {Notifier} from \"./types\";\n\nconst findIndex = (\n  notifiers: Array<Notifier<any, any>>,\n  key: string,\n  value: any\n) =>\n  // $FlowFixMe: flow is having some troubles to match hasIn signature (curry)\n  notifiers.findIndex(hasIn([key], value));\n\nexport default findIndex;\n","// @flow\n\nimport {replace as arrayReplace} from \"@jumpn/utils-array\";\n\nimport findIndex from \"./findIndex\";\n\nimport type {Notifier} from \"./types\";\n\nconst refresh = (notifier: Notifier<any, any>) => (\n  notifiers: Array<Notifier<any, any>>\n) =>\n  arrayReplace(\n    findIndex(notifiers, \"request\", notifier.request),\n    [notifier],\n    notifiers\n  );\n\nexport default refresh;\n","// @flow\n\nimport {remove as arrayRemove} from \"@jumpn/utils-array\";\n\nimport type {Notifier, Observer} from \"./types\";\n\nconst removeObserver = (observers, observer) =>\n  arrayRemove(observers.indexOf(observer), 1, observers);\n\nconst unobserve = <Result, Variables: void | Object>(\n  {activeObservers, ...rest}: Notifier<Result, Variables>,\n  observer: Observer<Result, Variables>\n) => ({\n  ...rest,\n  activeObservers: removeObserver(activeObservers, observer)\n});\n\nexport default unobserve;\n","// @flow\n\nimport type {AbsintheSocket} from \"./types\";\nimport type {Notifier} from \"./notifier/types\";\n\ntype Notifiers = Array<Notifier<any, any>>;\n\nconst updateNotifiers = (\n  absintheSocket: AbsintheSocket,\n  updater: (notifiers: Notifiers) => Notifiers\n) => {\n  absintheSocket.notifiers = updater(absintheSocket.notifiers);\n\n  return absintheSocket;\n};\n\nexport default updateNotifiers;\n","// @flow\n\nimport notifierRefresh from \"./notifier/refresh\";\nimport notifierUnobserve from \"./notifier/unobserve\";\nimport updateNotifiers from \"./updateNotifiers\";\n\nimport type {AbsintheSocket} from \"./types\";\nimport type {Notifier, Observer} from \"./notifier/types\";\n\nconst ensureHasActiveObserver = (notifier, observer) => {\n  if (notifier.activeObservers.includes(observer)) return notifier;\n\n  throw new Error(\"Observer is not attached to notifier\");\n};\n\n/**\n * Detaches observer from notifier\n *\n * @example\n * import * as withAbsintheSocket from \"@absinthe/socket\";\n *\n * withAbsintheSocket.unobserve(absintheSocket, notifier, observer);\n */\nconst unobserve = (\n  absintheSocket: AbsintheSocket,\n  notifier: Notifier<any, any>,\n  observer: Observer<any, any>\n): AbsintheSocket =>\n  updateNotifiers(\n    absintheSocket,\n    notifierRefresh(\n      notifierUnobserve(ensureHasActiveObserver(notifier, observer), observer)\n    )\n  );\n\nexport default unobserve;\n"],"names":["findIndex","notifiers","key","value","hasIn","refresh","notifier","arrayReplace","request","removeObserver","observers","observer","arrayRemove","indexOf","unobserve","activeObservers","rest","updateNotifiers","absintheSocket","updater","ensureHasActiveObserver","includes","Error","notifierRefresh","notifierUnobserve"],"mappings":";;;;;;;;;;;;;AAMA,IAAMA,SAAS,GAAG,mBAChBC,SADgB,EAEhBC,GAFgB,EAGhBC,KAHgB;;;;SAMhBF,SAAS,CAACD,SAAV,CAAoBI,KAAK,CAAC,CAACF,GAAD,CAAD,EAAQC,KAAR,CAAzB,CANgB;CAAH,gBAAf;;;;ACEA,IAAME,OAAO,GAAG,iBAACC,QAAD;;;;;SAAkC,UAChDL,SADgD;;;WAGhDM,OAAY,CACVP,SAAS,CAACC,SAAD,EAAY,SAAZ,EAAuBK,QAAQ,CAACE,OAAhC,CADC,EAEV,CAACF,QAAD,CAFU,EAGVL,SAHU,CAHoC;GAAlC;CAAH,gBAAb;;;;ACFA,IAAMQ,cAAc,GAAG,wBAACC,SAAD,EAAYC,QAAZ;;;SACrBC,MAAW,CAACF,SAAS,CAACG,OAAV,CAAkBF,QAAlB,CAAD,EAA8B,CAA9B,EAAiCD,SAAjC,CADU;CAAH,gBAApB;;AAGA,IAAMI,SAAS,GAAG,yBAEhBH,QAFgB;MACfI,eADe,QACfA,eADe;MACKC,IADL;;;;2BAIbA,IAJa;IAKhBD,eAAe,EAAEN,cAAc,CAACM,eAAD,EAAkBJ,QAAlB;;CALlB,gBAAf;;;;ACFA,IAAMM,eAAe,GAAG,yBACtBC,cADsB,EAEtBC,OAFsB,EAGnB;;;EACHD,cAAc,CAACjB,SAAf,GAA2BkB,OAAO,CAACD,cAAc,CAACjB,SAAhB,CAAlC;SAEOiB,cAAP;CANmB,gBAArB;;;;ACEA,IAAME,uBAAuB,GAAG,iCAACd,QAAD,EAAWK,QAAX,EAAwB;;;MAClDL,QAAQ,CAACS,eAAT,CAAyBM,QAAzB,CAAkCV,QAAlC,CAAJ,EAAiD,OAAOL,QAAP;QAE3C,IAAIgB,KAAJ,CAAU,sCAAV,CAAN;CAH2B,gBAA7B;;;;;;;;;;;AAcA,IAAMR,WAAS,GAAG,sBAChBI,cADgB,EAEhBZ,QAFgB,EAGhBK,QAHgB;;;SAKhBM,eAAe,CACbC,cADa,EAEbK,OAAe,CACbC,SAAiB,CAACJ,uBAAuB,CAACd,QAAD,EAAWK,QAAX,CAAxB,EAA8CA,QAA9C,CADJ,CAFF,CALC;CAAH,gBAAf;;;;"}