{"version":3,"file":"observe.js","sources":["../src/notifier/observe.js","../src/notifier/findIndex.js","../src/notifier/refresh.js","../src/updateNotifiers.js","../src/refreshNotifier.js","../src/observe.js"],"sourcesContent":["// @flow\n\nimport type {Notifier, Observer} from \"./types\";\n\nconst observe = <Result, Variables: void | Object>(\n  {activeObservers, ...rest}: Notifier<Result, Variables>,\n  observer: Observer<Result, Variables>\n) => ({\n  ...rest,\n  activeObservers: [...activeObservers, observer],\n  isActive: true\n});\n\nexport default observe;\n","// @flow\n\nimport {hasIn} from \"@jumpn/utils-composite\";\n\nimport type {Notifier} from \"./types\";\n\nconst findIndex = (\n  notifiers: Array<Notifier<any, any>>,\n  key: string,\n  value: any\n) =>\n  // $FlowFixMe: flow is having some troubles to match hasIn signature (curry)\n  notifiers.findIndex(hasIn([key], value));\n\nexport default findIndex;\n","// @flow\n\nimport {replace as arrayReplace} from \"@jumpn/utils-array\";\n\nimport findIndex from \"./findIndex\";\n\nimport type {Notifier} from \"./types\";\n\nconst refresh = (notifier: Notifier<any, any>) => (\n  notifiers: Array<Notifier<any, any>>\n) =>\n  arrayReplace(\n    findIndex(notifiers, \"request\", notifier.request),\n    [notifier],\n    notifiers\n  );\n\nexport default refresh;\n","// @flow\n\nimport type {AbsintheSocket} from \"./types\";\nimport type {Notifier} from \"./notifier/types\";\n\ntype Notifiers = Array<Notifier<any, any>>;\n\nconst updateNotifiers = (\n  absintheSocket: AbsintheSocket,\n  updater: (notifiers: Notifiers) => Notifiers\n) => {\n  absintheSocket.notifiers = updater(absintheSocket.notifiers);\n\n  return absintheSocket;\n};\n\nexport default updateNotifiers;\n","// @flow\n\nimport notifierRefresh from \"./notifier/refresh\";\nimport updateNotifiers from \"./updateNotifiers\";\n\nimport type {AbsintheSocket} from \"./types\";\nimport type {Notifier} from \"./notifier/types\";\n\nconst refreshNotifier = <Result, Variables: void | Object>(\n  absintheSocket: AbsintheSocket,\n  notifier: Notifier<Result, Variables>\n) => {\n  updateNotifiers(absintheSocket, notifierRefresh(notifier));\n\n  return notifier;\n};\n\nexport default refreshNotifier;\n","// @flow\n\nimport notifierObserve from \"./notifier/observe\";\nimport refreshNotifier from \"./refreshNotifier\";\n\nimport type {AbsintheSocket} from \"./types\";\nimport type {Notifier, Observer} from \"./notifier/types\";\n\n/**\n * Observes given notifier using the provided observer\n *\n * @example\n * import * as withAbsintheSocket from \"@absinthe/socket\"\n *\n * const logEvent = eventName => (...args) => console.log(eventName, ...args);\n *\n * const updatedNotifier = withAbsintheSocket.observe(absintheSocket, notifier, {\n *   onAbort: logEvent(\"abort\"),\n *   onError: logEvent(\"error\"),\n *   onStart: logEvent(\"open\"),\n *   onResult: logEvent(\"result\")\n * });\n */\nconst observe = <Result, Variables: void | Object>(\n  absintheSocket: AbsintheSocket,\n  notifier: Notifier<Result, Variables>,\n  observer: Observer<Result, Variables>\n) => refreshNotifier(absintheSocket, notifierObserve(notifier, observer));\n\nexport default observe;\n"],"names":["observe","observer","activeObservers","rest","isActive","findIndex","notifiers","key","value","hasIn","refresh","notifier","arrayReplace","request","updateNotifiers","absintheSocket","updater","refreshNotifier","notifierRefresh","notifierObserve"],"mappings":";;;;;;;;;;;AAIA,IAAMA,OAAO,GAAG,uBAEdC,QAFc;MACbC,eADa,QACbA,eADa;MACOC,IADP;;;;2BAIXA,IAJW;IAKdD,eAAe,qBAAMA,eAAN,UAAuBD,QAAvB,EALD;IAMdG,QAAQ,EAAE;;CANC,gBAAb;;;;ACEA,IAAMC,SAAS,GAAG,mBAChBC,SADgB,EAEhBC,GAFgB,EAGhBC,KAHgB;;;;SAMhBF,SAAS,CAACD,SAAV,CAAoBI,KAAK,CAAC,CAACF,GAAD,CAAD,EAAQC,KAAR,CAAzB,CANgB;CAAH,gBAAf;;;;ACEA,IAAME,OAAO,GAAG,iBAACC,QAAD;;;;;SAAkC,UAChDL,SADgD;;;WAGhDM,OAAY,CACVP,SAAS,CAACC,SAAD,EAAY,SAAZ,EAAuBK,QAAQ,CAACE,OAAhC,CADC,EAEV,CAACF,QAAD,CAFU,EAGVL,SAHU,CAHoC;GAAlC;CAAH,gBAAb;;;;ACDA,IAAMQ,eAAe,GAAG,yBACtBC,cADsB,EAEtBC,OAFsB,EAGnB;;;EACHD,cAAc,CAACT,SAAf,GAA2BU,OAAO,CAACD,cAAc,CAACT,SAAhB,CAAlC;SAEOS,cAAP;CANmB,gBAArB;;;;ACCA,IAAME,eAAe,GAAG,yBACtBF,cADsB,EAEtBJ,QAFsB,EAGnB;;;EACHG,eAAe,CAACC,cAAD,EAAiBG,OAAe,CAACP,QAAD,CAAhC,CAAf;SAEOA,QAAP;CANmB,gBAArB;;;;;;;;;;;;;;;;;;;ACeA,IAAMX,SAAO,GAAG,oBACde,cADc,EAEdJ,QAFc,EAGdV,QAHc;;;SAIXgB,eAAe,CAACF,cAAD,EAAiBI,OAAe,CAACR,QAAD,EAAWV,QAAX,CAAhC,CAJJ;CAAH,gBAAb;;;;"}